"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { createCareerPath } from "../services/careerPathService"

export default function CareerPath() {
  const [formData, setFormData] = useState({
    field: "",
    desired_skills: "",
    confident_skills: "",
  })
  const [isLoading, setIsLoading] = useState(false)
  const [message, setMessage] = useState("")
  const [messageType, setMessageType] = useState("") // "success" or "error"

  const handleInputChange = (field, value) => {
    setFormData((prev) => ({
      ...prev,
      [field]: value,
    }))
  }

  const handleSubmit = async () => {
    // Basic validation
    if (!formData.field.trim() || !formData.desired_skills.trim() || !formData.confident_skills.trim()) {
      setMessage("Please fill in all fields")
      setMessageType("error")
      return
    }

    setIsLoading(true)
    setMessage("")

    try {
      // For now using a placeholder user_id - you'll want to get this from auth context
      const careerData = {
        user_id: "user_123", // Replace with actual user ID from authentication
        field: formData.field.trim(),
        desired_skills: formData.desired_skills.trim(),
        confident_skills: formData.confident_skills.trim(),
        suggestion: "", // This might be generated by your backend or AI
      }

      const result = await createCareerPath(careerData)

      setMessage("Career path saved successfully!")
      setMessageType("success")

      // Reset form after successful submission
      setFormData({
        field: "",
        desired_skills: "",
        confident_skills: "",
      })
    } catch (error) {
      setMessage(error.message || "Failed to save career path")
      setMessageType("error")
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-white flex">
      {/* Sidebar Navigation */}
      <div className="w-64 bg-gray-50 p-6 border-r">
        <nav className="space-y-4">
          <div className="text-gray-700 hover:text-gray-900 cursor-pointer py-2">Profile</div>
          <div className="text-gray-700 hover:text-gray-900 cursor-pointer py-2">Projects</div>
          <div className="text-gray-700 hover:text-gray-900 cursor-pointer py-2">Articles</div>
          <div className="bg-gray-200 text-gray-900 font-medium px-3 py-2 rounded">Career Path</div>
          <div className="text-gray-700 hover:text-gray-900 cursor-pointer py-2">Get Project Ideas</div>
          <div className="text-gray-700 hover:text-gray-900 cursor-pointer py-2">Notifications</div>
        </nav>
      </div>

      {/* Main Content */}
      <div className="flex-1 p-8">
        {/* Header */}
        <div className="flex justify-between items-center mb-12">
          <h1 className="text-3xl font-bold text-gray-900">CSE Career Guide</h1>
          <Button className="bg-green-600 hover:bg-green-700 text-white px-6">Log Out</Button>
        </div>

        {/* Form Section */}
        <div className="max-w-2xl mx-auto space-y-8">
          {message && (
            <div
              className={`p-4 rounded-md text-center ${
                messageType === "success"
                  ? "bg-green-50 text-green-800 border border-green-200"
                  : "bg-red-50 text-red-800 border border-red-200"
              }`}
            >
              {message}
            </div>
          )}

          <div>
            <Input
              placeholder="Enter a field(s) you want to work in"
              className="w-full h-12 text-base bg-gray-100 border-gray-200 focus:border-green-500 focus:ring-green-500"
              value={formData.field}
              onChange={(e) => handleInputChange("field", e.target.value)}
              disabled={isLoading}
            />
          </div>

          <div>
            <Input
              placeholder="Skills which you desire"
              className="w-full h-12 text-base bg-gray-100 border-gray-200 focus:border-green-500 focus:ring-green-500"
              value={formData.desired_skills}
              onChange={(e) => handleInputChange("desired_skills", e.target.value)}
              disabled={isLoading}
            />
          </div>

          <div>
            <Input
              placeholder="Skills you are confident about"
              className="w-full h-12 text-base bg-gray-100 border-gray-200 focus:border-green-500 focus:ring-green-500"
              value={formData.confident_skills}
              onChange={(e) => handleInputChange("confident_skills", e.target.value)}
              disabled={isLoading}
            />
          </div>

          <div className="flex justify-center pt-8">
            <Button
              className="bg-green-600 hover:bg-green-700 text-white px-12 py-3 text-lg disabled:opacity-50"
              onClick={handleSubmit}
              disabled={isLoading}
            >
              {isLoading ? "Saving..." : "Enter"}
            </Button>
          </div>
        </div>
      </div>
    </div>
  )
}
